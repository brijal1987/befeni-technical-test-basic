{"ast":null,"code":"var _jsxFileName = \"/Users/brijalsavaliya/brijal/brijalsavaliya/demo/befeni-technical-test-basic/src/pages/Login/index.jsx\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { MDBContainer, MDBRow, MDBBtn, MDBCard, MDBCol, MDBInput } from 'mdbreact';\nimport { withApollo } from '@apollo/react-hoc';\nimport s from './Login.module.scss';\nimport Logo from \"../../assets/svgs/Th-hire-logo.svg\";\nimport { LOGIN_MUTATION } from './graphQueries';\nimport { authenticationService } from '../../services/authentication.service';\nconst propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func\n  }).isRequired,\n  client: PropTypes.shape({}).isRequired\n};\n\nconst Login = ({\n  client,\n  history\n}) => {\n  const [username, setUsername] = useState('');\n  const [password, setPasssword] = useState('');\n  const [loginLoading, setLoginLoading] = useState(false);\n  const [loginError, setLoginError] = useState('');\n\n  const handleOnSubmit = async e => {\n    e.preventDefault();\n    setLoginLoading(true);\n\n    try {\n      const {\n        data\n      } = await client.mutate({\n        mutation: LOGIN_MUTATION,\n        variables: {\n          input: {\n            username: username,\n            password: password\n          }\n        }\n      });\n      setUsername('');\n      setPasssword('');\n      setLoginLoading(false);\n\n      if (data.login.token && data.login.user) {\n        const userData = {\n          name: data.login.user.name,\n          token: data.login.token\n        };\n        authenticationService.login(JSON.stringify(userData));\n        history.push(`/dashboard`);\n      } else {\n        if (data.error) setLoginError(data.error);\n      }\n    } catch (err) {\n      setLoginLoading(false);\n\n      if (err.graphQLErrors) {\n        const errorMessage = err.graphQLErrors.map(e => e.message).join('');\n        setLoginError(errorMessage);\n      }\n    }\n  };\n\n  const handleInputChange = e => {\n    setUsername(e.target.value);\n  };\n\n  const handleInputPassword = e => {\n    setPasssword(e.target.value);\n  };\n\n  let formStyle;\n\n  if (loginLoading) {\n    formStyle = {\n      opacity: '0.5'\n    };\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: s.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: s.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MDBContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MDBRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MDBCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(MDBCard, {\n    className: s.loginContainer,\n    style: {\n      width: '30rem',\n      padding: '40px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, loginLoading && /*#__PURE__*/React.createElement(\"div\", {\n    className: s.logonFormLoader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 36\n    }\n  }, \"\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: loginLoading ? formStyle : {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: s.logoContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: s.titleContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: Logo,\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }))), loginError && /*#__PURE__*/React.createElement(\"div\", {\n    className: 'text-danger',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 36\n    }\n  }, loginError), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.loginForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleOnSubmit,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(MDBRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(MDBCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(MDBInput, {\n    value: username,\n    name: \"username\",\n    onChange: handleInputChange,\n    type: \"text\",\n    id: \"materialFormRegisterNameEx\",\n    label: \"Username\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 31\n    }\n  }, \"Username is required.\")))), /*#__PURE__*/React.createElement(MDBRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(MDBCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(MDBInput, {\n    value: password,\n    name: \"password\",\n    onChange: handleInputPassword,\n    type: \"password\",\n    id: \"materialFormRegisterEmailEx2\",\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 31\n    }\n  }, \"Password is required.\")))), /*#__PURE__*/React.createElement(MDBBtn, {\n    color: \"primary\",\n    type: \"submit\",\n    className: s.btn,\n    disabled: loginLoading,\n    style: {\n      width: '25rem',\n      margin: '0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  }, \"Login\")))))))))));\n};\n\nLogin.propTypes = propTypes;\nexport default withApollo(Login);","map":{"version":3,"sources":["/Users/brijalsavaliya/brijal/brijalsavaliya/demo/befeni-technical-test-basic/src/pages/Login/index.jsx"],"names":["React","useState","PropTypes","MDBContainer","MDBRow","MDBBtn","MDBCard","MDBCol","MDBInput","withApollo","s","LOGIN_MUTATION","authenticationService","propTypes","history","shape","push","func","isRequired","client","Login","username","setUsername","password","setPasssword","loginLoading","setLoginLoading","loginError","setLoginError","handleOnSubmit","e","preventDefault","data","mutate","mutation","variables","input","login","token","user","userData","name","JSON","stringify","error","err","graphQLErrors","errorMessage","map","message","join","handleInputChange","target","value","handleInputPassword","formStyle","opacity","root","card","loginContainer","width","padding","logonFormLoader","logoContainer","titleContainer","Logo","loginForm","btn","margin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,YAAT,EAAuBC,MAAvB,EAA+BC,MAA/B,EAAuCC,OAAvC,EAAgDC,MAAhD,EAAwDC,QAAxD,QAAwE,UAAxE;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,CAAP,MAAc,qBAAd;;AAEA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,qBAAT,QAAsC,uCAAtC;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,OAAO,EAAEZ,SAAS,CAACa,KAAV,CAAgB;AAAEC,IAAAA,IAAI,EAAEd,SAAS,CAACe;AAAlB,GAAhB,EAA0CC,UADnC;AAEhBC,EAAAA,MAAM,EAAEjB,SAAS,CAACa,KAAV,CAAgB,EAAhB,EAAoBG;AAFZ,CAAlB;;AAKA,MAAME,KAAK,GAAG,CAAC;AAAED,EAAAA,MAAF;AAAUL,EAAAA;AAAV,CAAD,KAAyB;AACrC,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACsB,QAAD,EAAWC,YAAX,IAA2BvB,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAACwB,YAAD,EAAeC,eAAf,IAAkCzB,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAAC0B,UAAD,EAAaC,aAAb,IAA8B3B,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAM4B,cAAc,GAAG,MAAOC,CAAP,IAAa;AAClCA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,eAAe,CAAC,IAAD,CAAf;;AACA,QAAI;AACF,YAAM;AAAEM,QAAAA;AAAF,UAAW,MAAMb,MAAM,CAACc,MAAP,CAAc;AACnCC,QAAAA,QAAQ,EAAEvB,cADyB;AAEnCwB,QAAAA,SAAS,EAAE;AACTC,UAAAA,KAAK,EAAE;AACLf,YAAAA,QAAQ,EAAEA,QADL;AAELE,YAAAA,QAAQ,EAAEA;AAFL;AADE;AAFwB,OAAd,CAAvB;AASAD,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,MAAAA,eAAe,CAAC,KAAD,CAAf;;AACA,UAAIM,IAAI,CAACK,KAAL,CAAWC,KAAX,IAAoBN,IAAI,CAACK,KAAL,CAAWE,IAAnC,EAAyC;AACvC,cAAMC,QAAQ,GAAG;AACfC,UAAAA,IAAI,EAAET,IAAI,CAACK,KAAL,CAAWE,IAAX,CAAgBE,IADP;AAEfH,UAAAA,KAAK,EAAEN,IAAI,CAACK,KAAL,CAAWC;AAFH,SAAjB;AAIA1B,QAAAA,qBAAqB,CAACyB,KAAtB,CAA4BK,IAAI,CAACC,SAAL,CAAeH,QAAf,CAA5B;AACA1B,QAAAA,OAAO,CAACE,IAAR,CAAc,YAAd;AACD,OAPD,MAOO;AACL,YAAIgB,IAAI,CAACY,KAAT,EAAgBhB,aAAa,CAACI,IAAI,CAACY,KAAN,CAAb;AACjB;AACF,KAvBD,CAuBE,OAAOC,GAAP,EAAY;AACZnB,MAAAA,eAAe,CAAC,KAAD,CAAf;;AACA,UAAImB,GAAG,CAACC,aAAR,EAAuB;AACrB,cAAMC,YAAY,GAAGF,GAAG,CAACC,aAAJ,CAAkBE,GAAlB,CAAuBlB,CAAD,IAAOA,CAAC,CAACmB,OAA/B,EAAwCC,IAAxC,CAA6C,EAA7C,CAArB;AACAtB,QAAAA,aAAa,CAACmB,YAAD,CAAb;AACD;AACF;AACF,GAjCD;;AAmCA,QAAMI,iBAAiB,GAAIrB,CAAD,IAAO;AAC/BR,IAAAA,WAAW,CAACQ,CAAC,CAACsB,MAAF,CAASC,KAAV,CAAX;AACD,GAFD;;AAGA,QAAMC,mBAAmB,GAAIxB,CAAD,IAAO;AACjCN,IAAAA,YAAY,CAACM,CAAC,CAACsB,MAAF,CAASC,KAAV,CAAZ;AACD,GAFD;;AAGA,MAAIE,SAAJ;;AACA,MAAI9B,YAAJ,EAAkB;AAChB8B,IAAAA,SAAS,GAAG;AACVC,MAAAA,OAAO,EAAE;AADC,KAAZ;AAGD;;AACD,sBACE,uDACE;AAAK,IAAA,SAAS,EAAE9C,CAAC,CAAC+C,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAE/C,CAAC,CAACgD,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAEhD,CAAC,CAACiD,cAAtB;AAAsC,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGpC,YAAY,iBAAI;AAAK,IAAA,SAAS,EAAEf,CAAC,CAACoD,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADnB,eAEE;AAAK,IAAA,KAAK,EAAErC,YAAY,GAAG8B,SAAH,GAAe,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAE7C,CAAC,CAACqD,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAErD,CAAC,CAACsD,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEC,IAAV;AAAgB,IAAA,GAAG,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,EAMGtC,UAAU,iBAAI;AAAK,IAAA,SAAS,EAAE,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCA,UAAhC,CANjB,eAOE;AAAK,IAAA,SAAS,EAAEjB,CAAC,CAACwD,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,QAAQ,EAAErC,cAAhB;AAAgC,IAAA,UAAU,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAER,QADT;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,QAAQ,EAAE8B,iBAHZ;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,EAAE,EAAC,4BALL;AAME,IAAA,KAAK,EAAC,UANR;AAOE,IAAA,QAAQ,MAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BATF,CADF,CADF,CADF,eAgBE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAE5B,QADT;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,QAAQ,EAAE+B,mBAHZ;AAIE,IAAA,IAAI,EAAC,UAJP;AAKE,IAAA,EAAE,EAAC,8BALL;AAME,IAAA,KAAK,EAAC,UANR;AAOE,IAAA,QAAQ,MAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BATF,CADF,CADF,CAhBF,eA+BE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,SAAS,EAAE5C,CAAC,CAACyD,GAHf;AAIE,IAAA,QAAQ,EAAE1C,YAJZ;AAKE,IAAA,KAAK,EAAE;AAAEmC,MAAAA,KAAK,EAAE,OAAT;AAAkBQ,MAAAA,MAAM,EAAE;AAA1B,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aA/BF,CADF,CAPF,CAFF,CADF,CADF,CADF,CADF,CADF,CADF,CADF;AAoED,CAzHD;;AA2HAhD,KAAK,CAACP,SAAN,GAAkBA,SAAlB;AACA,eAAeJ,UAAU,CAACW,KAAD,CAAzB","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { MDBContainer, MDBRow, MDBBtn, MDBCard, MDBCol, MDBInput } from 'mdbreact';\nimport { withApollo } from '@apollo/react-hoc';\nimport s from './Login.module.scss';\nimport Logo from '../../assets/svgs/Th-hire-logo.svg';\nimport { LOGIN_MUTATION } from './graphQueries';\nimport { authenticationService } from '../../services/authentication.service';\n\nconst propTypes = {\n  history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n  client: PropTypes.shape({}).isRequired,\n};\n\nconst Login = ({ client, history }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPasssword] = useState('');\n  const [loginLoading, setLoginLoading] = useState(false);\n  const [loginError, setLoginError] = useState('');\n\n  const handleOnSubmit = async (e) => {\n    e.preventDefault();\n    setLoginLoading(true);\n    try {\n      const { data } = await client.mutate({\n        mutation: LOGIN_MUTATION,\n        variables: {\n          input: {\n            username: username,\n            password: password,\n          },\n        },\n      });\n      setUsername('');\n      setPasssword('');\n      setLoginLoading(false);\n      if (data.login.token && data.login.user) {\n        const userData = {\n          name: data.login.user.name,\n          token: data.login.token,\n        };\n        authenticationService.login(JSON.stringify(userData));\n        history.push(`/dashboard`);\n      } else {\n        if (data.error) setLoginError(data.error);\n      }\n    } catch (err) {\n      setLoginLoading(false);\n      if (err.graphQLErrors) {\n        const errorMessage = err.graphQLErrors.map((e) => e.message).join('');\n        setLoginError(errorMessage);\n      }\n    }\n  };\n\n  const handleInputChange = (e) => {\n    setUsername(e.target.value);\n  };\n  const handleInputPassword = (e) => {\n    setPasssword(e.target.value);\n  };\n  let formStyle;\n  if (loginLoading) {\n    formStyle = {\n      opacity: '0.5',\n    };\n  }\n  return (\n    <>\n      <div className={s.root}>\n        <div className={s.card}>\n          <MDBContainer>\n            <MDBRow>\n              <MDBCol>\n                <MDBCard className={s.loginContainer} style={{ width: '30rem', padding: '40px' }}>\n                  {loginLoading && <div className={s.logonFormLoader}>&nbsp;</div>}\n                  <div style={loginLoading ? formStyle : {}}>\n                    <div className={s.logoContainer}>\n                      <div className={s.titleContainer}>\n                        <img src={Logo} alt=\"logo\" />\n                      </div>\n                    </div>\n                    {loginError && <div className={'text-danger'}>{loginError}</div>}\n                    <div className={s.loginForm}>\n                      <form onSubmit={handleOnSubmit} noValidate>\n                        <MDBRow>\n                          <MDBCol>\n                            <MDBInput\n                              value={username}\n                              name=\"username\"\n                              onChange={handleInputChange}\n                              type=\"text\"\n                              id=\"materialFormRegisterNameEx\"\n                              label=\"Username\"\n                              required\n                            >\n                              <div className=\"invalid-feedback\">Username is required.</div>\n                            </MDBInput>\n                          </MDBCol>\n                        </MDBRow>\n                        <MDBRow>\n                          <MDBCol>\n                            <MDBInput\n                              value={password}\n                              name=\"password\"\n                              onChange={handleInputPassword}\n                              type=\"password\"\n                              id=\"materialFormRegisterEmailEx2\"\n                              label=\"Password\"\n                              required\n                            >\n                              <div className=\"invalid-feedback\">Password is required.</div>\n                            </MDBInput>\n                          </MDBCol>\n                        </MDBRow>\n                        <MDBBtn\n                          color=\"primary\"\n                          type=\"submit\"\n                          className={s.btn}\n                          disabled={loginLoading}\n                          style={{ width: '25rem', margin: '0' }}\n                        >\n                          Login\n                        </MDBBtn>\n                      </form>\n                    </div>\n                  </div>\n                </MDBCard>\n              </MDBCol>\n            </MDBRow>\n          </MDBContainer>\n        </div>\n      </div>\n    </>\n  );\n};\n\nLogin.propTypes = propTypes;\nexport default withApollo(Login);\n"]},"metadata":{},"sourceType":"module"}